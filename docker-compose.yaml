version: '3.8'

services:
  # PostgreSQL
  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: bookings
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # # Redis
  # redis:
  #   image: redis:alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: ./docker/api-gateway/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - auth-service
      - booking-service
    environment:
      - AUTH_SERVICE_URL=http://auth-service:8080
      - BOOKING_SERVICE_URL=http://booking-service:8081

  # Auth Service
  auth-service:
    build:
      context: .
      dockerfile: ./docker/auth-service/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_URL=postgres://user:password@postgres:5432/bookings?sslmode=disable
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      # - redis

  # Booking Service
  booking-service:
    build:
      context: .
      dockerfile: ./docker/booking-service/Dockerfile
    ports:
      - "8081:8081"
    environment:
      - POSTGRES_URL=postgres://user:password@postgres:5432/bookings?sslmode=disable
    depends_on:
      - postgres

  # Frontend (Vue.js)
  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - api-gateway

# Тома для хранения данных
volumes:
  postgres_data:
  redis_data: